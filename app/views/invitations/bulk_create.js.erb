<%= render 'shared/js_flash', message: @flash[:message], type: @flash[:type] %>

if ("<%= @flash[:type].to_s %>" === 'success') {
  // Using [<%= @guest_ids %>] in case @guest_ids is nil, in which case it
  // will be blank, thus we will get an empty array and forEach will not fail.

  // Using this approach to use the same render :bulk_create on the controller
  // action for both valid and invalid params[:guest_ids].

  // Flatten array of ids: e.g. [1] for one guest, [[1], [2]] for multiple.
  var guestIDS = [].concat.apply([], [<%= @guest_ids %>]);
  var newInvitesCount = 0;
  var includedAlreadyInvitedGuests = false;

  guestIDS.forEach((guestID) => {
    var row = document.querySelector(`
      input[name="guest_ids[]"][value="${guestID}"]`).parentNode.parentNode;

    if (row.classList.contains('invited')) {
      includedAlreadyInvitedGuests = true;
      return
    }

    newInvitesCount += 1
    row.remove();
  });

  var oldTotaInvitedCount = Number(document.getElementById(
    'all-invited-guests-counter').innerHTML);
  var newTotalInvitedCount = oldTotaInvitedCount + newInvitesCount;
  var oldRemainingCount = Number(document.getElementById(
    'all-remaining-guests-counter').innerHTML);
  var newRemainingCount = oldRemainingCount - newInvitesCount;

  document.getElementById('all-invited-guests-counter').innerHTML =
    newTotalInvitedCount

  document.getElementById('all-remaining-guests-counter').innerHTML =
    newRemainingCount;

  document.querySelectorAll('input[type="checkbox"').forEach((input) => {
    input.checked = false;
  });

  if (includedAlreadyInvitedGuests) {
    <%= render 'shared/js_flash',
      message: 'Sent invites successfully to uninvited guests.',
      type: 'success' %>
  }
}
